// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator trpc {
  provider       = "prisma-trpc-generator"
  withMiddleware = false
  withShield     = false
  contextPath    = "@/server/trpc/context"
}

// Necessary for Next auth
model Account {
  id                String  @id @default(cuid())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       Int
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model User {
  id            Int       @id @default(autoincrement())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  // Custom Fields
  authoredWorkouts Workout[] @relation("WorkoutAuthor")
  savedWorkouts    Workout[] @relation("WorkoutSaves")
  username         String    @unique

  @@index([username])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Workout {
  id       Int    @id @default(autoincrement())
  name     String
  tags     Tag[]
  author   User?  @relation(name: "WorkoutAuthor", fields: [authorId], references: [id])
  authorId Int?
  savedBy  User[] @relation("WorkoutSaves")

  @@index([authorId])
}

model Exercise {
  id          Int    @id @default(autoincrement())
  name        String @unique
  difficulty  String
  sets        Int    @default(1)
  reps        String
  rest        String
  tags        Tag[]
  exampleLink String
}

model Tag {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  exercises Exercise[]
  workouts  Workout[]

  @@index([name])
}
